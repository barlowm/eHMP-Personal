define([],function(){var e={validateHistorical:function(e,t){var r=ADK.PatientRecordService.getCurrentPatient(),i=r.get("pid"),a=e.get("heightInputValue"),u=e.get("weightInputValue");if(!a&&!u)return void t();var n;if(a){var l=a.substring(a.length-2,a.length);n=Number(a.substring(0,a.length-2)),"cm"===l&&(n=2.54*n)}var s;if(u){var o=u.substring(u.length-2,u.length);s=Number(u.substring(0,u.length-2)),"kg"===o&&(s=2.20462*s)}var d=ADK.UserService.getUserSession().get("site"),m=ADK.ResourceService.buildUrl("vitals-vitalsRule"),p={type:"GET",url:m,data:{height:n,weight:s,site:d,pid:i},dataType:"json"},b=$.ajax(p),g="8302-2",v="29463-7",h=this;b.done(function(e){if(e&&e.data){var r,i=e.data.data,a=JSON.parse(i),u=_.filter(a.results,function(e){return e.body.reason?_.some(e.body.reason[0].coding,{code:g}):void 0});_.isEmpty(u)||(r=_.filter(a.results,function(e){return e.body.code?_.some(e.body.code.coding,{code:g}):void 0}));var l=_.filter(a.results,function(e){return e.body.reason?_.some(e.body.reason[0].coding,{code:v}):void 0}),o=_.filter(a.results,function(e){return e.body.code?_.some(e.body.code.coding,{code:v}):void 0}),d=!1;_.isEmpty(r)&&_.isEmpty(o)||(d=!0);var m=h.buildWarningMessage(n,s,u,r,l,o);t(d,m)}}),b.fail(function(e,r){var i="<p>Height (or Weight) difference from previous measurement could not be validated because the server is not available</p>";t(!0,i)})},areAllDataFieldsEmpty:function(e){return e.get("circumValue")||e.get("bpInputValue")||e.get("heightInputValue")||e.get("respirationInputValue")||e.get("pulseInputValue")||e.get("weightInputValue")||e.get("O2InputValue")||e.get("temperatureInputValue")||e.get("pain-value-po")||e.get("facility-name-pass-po")||e.get("bp-unavailable-po")||e.get("bp-refused-po")||e.get("pulse-unavailable-po")||e.get("pulse-refused-po")||e.get("respiration-unavailable-po")||e.get("respiration-refused-po")||e.get("temperature-unavailable-po")||e.get("temperature-refused-po")||e.get("height-unavailable-po")||e.get("height-refused-po")||e.get("weight-unavailable-po")||e.get("weight-refused-po")||e.get("pain-unavailable-po")||e.get("pain-refused-po")||e.get("cg-unavailable-po")||e.get("cg-refused-po")||e.get("po-unavailable-po")||e.get("po-refused-po")||e.get("pain-checkbox-po")?!1:!0},buildWarningMessage:function(e,t,r,i,a,u){var n="Warnings Exist: <ul>";return _.isEmpty(r)||(n+="<li>"+_.first(_.first(r).body.payload).contentString+" </br>Just Entered: "+e+" in "+moment().format("MM/DD/YYYY h:mm a"),_.isEmpty(i)||(n+="</br>Previous Value: "+_.first(i).body.valueQuantity.value+" in "+moment(_.first(i).body.issued).format("MM/DD/YYYY h:mm a")),n+="</li>"),_.isEmpty(u)||(n+="<li>The new weight value differs by 20% or more from previous values.</br>Just Entered: "+t+" in "+moment().format("MM/DD/YYYY h:mm a")+"</br>Previous Value: "+_.first(u).body.valueQuantity.value+" in "+moment(_.first(u).body.issued).format("MM/DD/YYYY h:mm a")+"</li>"),n+="</ul> Check to ensure you have entered data for the correct patient's chart and in the correct units of measure Do you want to save the new value??"},validateModel:function(e){if(e.errorModel.clear(),this.validateCircumferenceFields(e,e.get("circumValue")),this.validateBPFields(e,e.get("bpInputValue")),this.validateHeightFields(e,e.get("heightInputValue")),this.validateRespirationFields(e,e.get("respirationInputValue")),this.validatePulseFields(e,e.get("pulseInputValue")),this.validateWeightFields(e,e.get("weightInputValue")),this.validateSuppO2Fields(e,e.get("suppO2InputValue")),this.validateO2Fields(e,e.get("O2InputValue")),this.validateTemperatureFields(e,e.get("temperatureInputValue")),this.validateMeasuredDateAndTime(e,e.get("dateTakenInput"),e.get("time-taken")),this.validatePainFields(e,e.get("pain-value-po")),!_.isEmpty(e.errorModel.toJSON())){var t="Validation errors. Please fix.";return t}},validatePainFields:function(e,t){t&&(!this.validWholeNumber(t)||Number(t)<0||Number(t)>10)&&e.errorModel.set({"pain-value-po":"Pain value must be a whole number between 0 and 10"})},validateCircumferenceFields:function(e,t){if(t){var r=t.substring(t.length-2,t.length),i=Number(t.substring(0,t.length-2));if(!this.validDecimal(i))return void e.errorModel.set({circumValue:"Circumference must be a numeric value"});"in"===r?(1>i||i>200)&&e.errorModel.set({circumValue:"Circumference must be between 1 and 200 inches"}):(2.54>i||i>508)&&e.errorModel.set({circumValue:"Circumference must be between 2.54 and 508 centimeters"})}},validateBPFields:function(e,t){if(t){bpRegExCommon=/^(\d{1,3})\/(\d{1,3})$/,bpRegEx=/^(\d{1,3})\/(\d{1,3})\/(\d{1,3})$/;var r=bpRegExCommon.test(t),i=bpRegEx.test(t);i||r||e.errorModel.set({bpInputValue:"Blood Pressure value must be a valid format: nnn/nnn or nnn/nnn/nnn"});var a=t.split("/"),u=a[0],n=a[1],l=a[1];3==a.length&&(n=a[2],(Number(l)<0||Number(l)>300)&&e.errorModel.set({bpInputValue:"Blood Pressure Intermediate value must be a number between 0 and 300"})),(Number(u)<0||Number(u)>300)&&e.errorModel.set({bpInputValue:"Blood Pressure Systolic value must be a number between 0 and 300"}),(Number(n)<0||Number(n)>300)&&e.errorModel.set({bpInputValue:"Blood Pressure Diastolic value must be a number between 0 and 300"})}},validateHeightFields:function(e,t){if(t){var r=t.substring(t.length-2,t.length),i=Number(t.substring(0,t.length-2));if(!this.validDecimal(i))return void e.errorModel.set({heightInputValue:"Height must be a numeric value"});"in"===r?(10>i||i>100)&&e.errorModel.set({heightInputValue:"Height must be between 10 and 100 inches"}):(25.4>i||i>254)&&e.errorModel.set({heightInputValue:"Height must be between 25.4 and 254 centimeters"})}},validateRespirationFields:function(e,t){if(t){if(!this.validWholeNumber(t))return void e.errorModel.set({respirationInputValue:"Respiration must be a whole numeric value"});var r=Number(t);(0>r||r>100)&&e.errorModel.set({respirationInputValue:"Respiration must be between 0 and 100 /min"})}},validatePulseFields:function(e,t){if(t){if(!this.validDecimal(t))return void e.errorModel.set({pulseInputValue:"Beats must be a numeric value"});var r=Number(t);(0>r||r>300)&&e.errorModel.set({pulseInputValue:"Beats must be between 0 and 300 /min"})}},validateWeightFields:function(e,t){if(t){var r=t.substring(t.length-2,t.length),i=Number(t.substring(0,t.length-2));if(!this.validDecimal(i))return void e.errorModel.set({weightInputValue:"Weight must be a numeric value"});"lb"===r?(0>i||i>1500)&&e.errorModel.set({weightInputValue:"Weight must be between 0 and 1500 pounds"}):(0>i||i>680.39)&&e.errorModel.set({weightInputValue:"Weight must be between 0 and 680.39 kilograms"})}},validateSuppO2Fields:function(e,t){if(t){if(!this.validDecimal(t))return void e.errorModel.set({suppO2InputValue:"Flow Rate must be a numeric value"});var r=Number(t);(.5>r||r>20)&&e.errorModel.set({suppO2InputValue:"Flow Rate must be between 0.5 and 20 (liters/minute)"})}},validateO2Fields:function(e,t){if(t){if(!this.validWholeNumber(t))return void e.errorModel.set({O2InputValue:"O2 Concentration must be a whole numeric value"});var r=Number(t);(21>r||r>100)&&e.errorModel.set({O2InputValue:"O2 Concentration must be between 21 and 100"})}},validateTemperatureFields:function(e,t){if(t){var r=t.substring(t.length-1,t.length),i=Number(t.substring(0,t.length-1));if(!this.validDecimal(i))return void e.errorModel.set({temperatureInputValue:"Temperature must be a numeric value"});"F"===r?(45>i||i>120)&&e.errorModel.set({temperatureInputValue:"Temperature must be between 45 and 120 degrees F"}):(7.2>i||i>48.9)&&e.errorModel.set({temperatureInputValue:"Temperature must be between 7.2 and 48.9 degrees C"})}},validateMeasuredDateAndTime:function(e,t,r){if(t){var i=moment();if(r){var a=moment(t+" "+r,"MM/DD/YYYY hh:mm a");a.isAfter(i)&&(a.isSame(i,"day")?e.errorModel.set({"time-taken":"Measured Date/Time must be in the past."}):e.errorModel.set({dateTakenInput:"Measured Date/Time must be in the past."}))}else{var u=moment(t,"MM/DD/YYYY");u.isAfter(i)&&e.errorModel.set({dateTakenInput:"Measured Date/Time must be in the past."})}}},validDecimal:function(e){var t=/^[+-]?\.?[0-9]{1,9}(?:\.[0-9]{1,10})?$/;return t.test(e)},validWholeNumber:function(e){if(/^-?\d+$/.test(e)){var t=Number(e);return!isNaN(t)&&t%1===0}return!1}};return e});